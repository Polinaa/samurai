{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/dialog-item/DialogItem.module.css","components/dialogs/dialog-item/DialogItem.js","components/dialogs/message/Message.js","components/dialogs/Dialogs.js","components/dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","s","dialogItem","ava","name","active","to","id","Message","message","maxLength5","maxLength","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","FormControls","validate","required","Dialogs","dialogs","dialogElements","map","d","key","messageElements","messages","m","dialogItems","formData","sendMessage","newMessageText","compose","withAuthRedirect","connect","state","dispatch","sendMessageActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAjND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,IAAM,0B,uICcrDC,EAXI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,YACd,yBAAKF,UAAWC,IAAEE,MAClB,yBAAKH,UAAWC,IAAEG,KAAO,IAAMH,IAAEI,QAC7B,kBAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,IAAKR,EAAMK,S,kBCA7CI,EANC,SAACT,GACb,OACI,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,iCCGpCC,EAAaC,YAAU,GAgBvBC,EAAsBC,YAAU,CAACC,KAAM,qBAAjBD,EAfL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAY,oBACZC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBN,KAAM,oBAEjB,6BACI,6CA8BDmB,EAvBC,SAACxB,GACb,IAAIyB,EAAUzB,EAAMyB,QAChBC,EAAiBD,EAAQA,QAAQE,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAEpB,GAAIH,KAAMuB,EAAEvB,KAAMG,GAAIoB,EAAEpB,QACrFsB,EAAkBL,EAAQM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAExB,GAAIE,QAASsB,EAAEtB,aAK/E,OACI,yBAAKT,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAE+B,aACbP,GAEL,6BACI,yBAAKzB,UAAWC,IAAE6B,UACbD,GAEL,kBAACjB,EAAD,CAAqBG,SAZZ,SAACkB,GAClBlC,EAAMmC,YAAYD,EAASE,sB,wBCXpBC,sBACXC,IACAC,aAhBkB,SAACC,GACnB,MAAO,CACHf,QAASe,EAAMf,YAIE,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAyBN,SAK/BC,CAGbb","file":"static/js/3.493b6506.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3i6Ij\",\"dialogItems\":\"Dialogs_dialogItems__2HfOE\",\"active\":\"Dialogs_active__29h-a\",\"dialog\":\"Dialogs_dialog__2vSuO\",\"messages\":\"Dialogs_messages__1dMiD\",\"message\":\"Dialogs_message__3VF5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__29209\",\"ava\":\"DialogItem_ava__3Smc1\"};","import React from 'react';\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialogItem}>\n            <div className={s.ava}></div>\n            <div className={s.name + ' ' + s.active}>\n                <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.css'\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./dialog-item/DialogItem\";\nimport Message from \"./message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength, required} from \"../../utils/validators/validators\";\nimport {FormControls} from \"../common/form-controls/form-controls\";\n\nconst maxLength5 = maxLength(5);\nconst NewMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder=\"Enter new message\"\n                       component={FormControls}\n                       validate={[required, maxLength5]}\n                       name={\"newMessageText\"}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>);\n};\n\nconst NewMessageReduxForm = reduxForm({form: \"dialogsNewMessage\"})(NewMessageForm);\n\nconst Dialogs = (props) => {\n    let dialogs = props.dialogs;\n    let dialogElements = dialogs.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n    let messageElements = dialogs.messages.map(m => <Message key={m.id} message={m.message}/>);\n\n    let sendNewMessage = (formData) => {\n        props.sendMessage(formData.newMessageText);\n    };\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogElements}\n            </div>\n            <div>\n                <div className={s.messages}>\n                    {messageElements}\n                </div>\n                <NewMessageReduxForm onSubmit={sendNewMessage}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogs,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageText) => {\n            dispatch(sendMessageActionCreator(newMessageText))\n        }\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);\n"],"sourceRoot":""}